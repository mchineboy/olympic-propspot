rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.administrator == true;
    }

    function isApproved() {
      return get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.approved == true;
    }
    
    match /{document=**} {
      allow read, write: if false;
    }

    match /profiles/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    match /purgatory/{userId} {
      allow read: if isAdmin();
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if isAdmin();
    }

    // Allow all users to read all props
    match /props {
      allow read: if request.auth != null;
      allow create: if request.auth != null && isApproved();
      allow update, delete: if request.auth != null && isApproved();
    }

    match /props/{propId} {
      allow read, write: if request.auth != null && isApproved();
    }

    match /prefs/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}